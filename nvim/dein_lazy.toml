[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
if = "has('python3')"
on_event = 'BufRead'
hook_source = '''
  call denite#custom#map('insert', '<esc>', '<denite:enter_mode:normal>', 'noremap')
  call denite#custom#map('normal', '<esc>', '<denite:quit>', 'noremap')
  call denite#custom#map('normal', 's', '<denite:do_action:split>', 'noremap')
  call denite#custom#map('normal', 'v', '<denite:do_action:vsplit>', 'noremap')

  if executable('rg')
    call denite#custom#var('file_rec', 'command',
          \ ['rg', '--files', '--glob', '!.git'])
    call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'default_opts',
          \ ['--vimgrep', '--no-heading'])
  endif

  call denite#custom#source('file_rec', 'matchers', ['matcher_cpsm'])
  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
        \ [ '.git/', '.ropeproject/', '__pycache__/',
        \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
  call denite#custom#option('default', 'prompt', '>')

  nnoremap [denite] <Nop>
  nmap <Leader>u [denite]

  nnoremap <silent> [denite]f :<C-u>Denite file_rec -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]b :<C-u>Denite buffer -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]l :<C-u>Denite line -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]g :<C-u>Denite grep -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]cg :<C-u>DeniteCursorWord grep -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]fm :<C-u>Denite file_mru -highlight-mode-insert=PmenuSel<CR>
  nnoremap <silent> [denite]r :<C-u>Denite -resume<CR>
  nnoremap <silent> [denite]n :<C-u>Denite -resume -immediately -select=+1<CR>
  nnoremap <silent> [denite]p :<C-u>Denite -resume -immediately -select=-1<CR>
  nnoremap <silent> [denite]<C-d> :<C-u>call denite#start([{'name': 'file_rec', 'args': ['~/.dotfiles']}])<CR>
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
on_event = 'VimEnter'
hook_source = '''
  let NERDTreeShowHidden = 1

  nnoremap [nerdtree] <Nop>
  nmap <Leader>e [nerdtree]
  nnoremap <silent> [nerdtree]t :NERDTreeToggle<CR>
  nnoremap <silent> [nerdtree]f :NERDTreeFocus<CR>
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_start_length = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_event = 'InsertEnter'

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']
if = "has('nvim')"
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-go'
depends = ['deoplete.nvim']
if = "has('nvim')"
on_ft = 'go'
build = 'make'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
depends = 'deoplete.nvim'
on_ft = 'ruby'
hook_source = '''
  let g:deoplete#sources#omni#input_patterns = {
  \   "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'
on_ft = ['vim', 'html', 'toml']
hook_add = '''
 let g:precious_enable_switch_CursorMoved = { '*': 0, 'help': 1 }
 autocmd MyAutoCmd InsertEnter * :PreciousSwitch
 autocmd MyAutoCmd InsertLeave * :PreciousReset"}
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  let g:neosnippet#snippets_directory='~/.cache/dein/repos/github.com/honza/vim-snippets/snippets/'
'''
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_event = 'InsertCharPre'
on_ft = 'snippet'
depends = ['neosnippet-snippets']

# =====  lang =====
[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'
hook_source = '''
  let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'kannokanno/previm'
on_ft = 'markdown'
hook_source = '''
  let g:previm_open_cmd = 'open'

  nnoremap [previm] <Nop>
  nmap <Leader>p [previm]
  nnoremap <silent> [previm]o :<C-u>PrevimOpen<CR>
  nnoremap <silent> [previm]r :call previm#refresh()<CR>
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'javascript'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

#[[plugins]]
#repo = 'vim-ruby/vim-ruby'
#on_ft = 'ruby'

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'

[[plugins]]
repo = 'vim-scripts/ruby-matchit'
on_ft = 'ruby'

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = 'elixir'

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'

[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = 'slim'

[[plugins]]
repo = 'Shougo/neopairs.vim'
